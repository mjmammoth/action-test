name: Python Package CI/CD

on:
  push:
    branches:
      - *

jobs:

  version-matrix:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ steps.set-matrix.outputs.python-versions }}
      poetry-versions: ${{ steps.set-matrix.outputs.poetry-versions }}
    steps:
      - name: Set matrix versions
        id: set-matrix
        run: |
          echo 'python-versions=["3.12.3"]' >> $GITHUB_OUTPUT
          echo 'poetry-versions=["1.8.3"]' >> $GITHUB_OUTPUT

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: 'write'
      id-token: 'write'
    runs-on: ubuntu-latest
    needs:
      - version-matrix
    strategy:
      matrix:
        python-version: ${{ fromJSON(needs.version-matrix.outputs.python-versions) }}
        poetry-version: ${{ fromJSON(needs.version-matrix.outputs.poetry-versions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: poetry install

      - name: Determine version bump type
        id: determine_version'
        run: |
          VERSION_BUMP=patch
          BASE_COMMIT=$(git merge-base HEAD origin/main)
          COMMITS=$(git rev-list $BASE_COMMIT..HEAD)
          for COMMIT in $COMMITS; do
            COMMIT_MESSAGE=$(git log -1 --pretty=%B $COMMIT)
            echo "Commit message: $COMMIT_MESSAGE"
            if echo "$COMMIT_MESSAGE" | grep -q '#major'; then
              VERSION_BUMP=major
              break
            elif echo "$COMMIT_MESSAGE" | grep -q '#minor'; then
              VERSION_BUMP=minor
            fi
          done
          echo "VERSION_BUMP=$VERSION_BUMP" >> $GITHUB_ENV
          echo "Determined version bump type: $VERSION_BUMP"

      - name: Bump version
        id: bump_version
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          poetry run bump-my-version bump ${{ env.VERSION_BUMP }}
          VERSION=$(poetry version -s)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Bumped version to $VERSION"

      - name: Push version commit & tags
        run: git push --tags
